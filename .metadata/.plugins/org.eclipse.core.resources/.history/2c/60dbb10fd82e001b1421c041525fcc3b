/*
	 * Programa: Plantilla que calcula el determinante de una matriz 3x3
	 * Autor: Miguel Angel Naranjo Joya.
	 * Fecha:  20 de nov de 2020.
*/
package determinante3x3;

public class DeterminanteMet {
	private int opc;
	private double matriz[][] = new double[3][3];
	private double deter = 0;

	public int getOpc() {
		return opc;
	}

	public void setOpc(int opc) {
		if (opc == 1) {
			System.out.println(detIter());
		}
		if (opc == 0) {
			System.out.println(detRec());
		}

		this.opc = opc;
	}

	public double[][] getMatriz() {
		return matriz;
	}

	public void setMatriz(double[][] matriz) {
		this.matriz = matriz;
	}

	public double detIter() {
		deter = 0;
		double aux = 1;
		for (int i = 0; i < 3; i++) {
			aux = aux * matriz[i][i];
		}
		deter = deter + aux;
		aux = 1;

		for (int i = 1; i <= 3; i++) {
			if (i < 3) {
				aux = aux * matriz[i - 1][i];
			}
			if (i == 3) {
				aux = aux * matriz[i - 1][i - 3];
				i = 4;
			}

		}
		deter = deter + aux;
		aux = 1;

		for (int i = 2; i <= 4; i++) {
			if (i < 3) {
				aux = aux * matriz[i - 2][i];
			}
			if (i >= 3) {
				aux = aux * matriz[i - 2][i - 3];
				i = i + 1;
				aux = aux * matriz[i - 2][i - 3];
			}

		}
		deter = deter + aux;
		aux = 1;
		for (int i = 1; i >= -2; i--) {
			if (i > 0) {
				aux = aux * matriz[i - 1][i];
				aux = aux * matriz[i][i - 1];
			}
			if (i == 0) {
				aux = aux * matriz[i + 2][i + 2];
			}

		}
		deter = deter - aux;
		aux = 1;
		for (int i = 0; i >= -3; i--) {
			if (i == 0) {
				aux = aux * matriz[i][i];
			}
			if (i >= 0) {
				aux = aux * matriz[i + 1][i + 2];
				aux = aux * matriz[i + 2][i + 1];
			}

		}
		deter = deter - aux;
		aux = 1;
		for (int i = 2; i >= 2; i--) {
			aux = aux * matriz[i - 2][i];
			aux = aux * matriz[i - 1][i - 1];
			aux = aux * matriz[i][i - 2];
		}
		deter = deter - aux;
		aux = 1;

		return deter;
	}
public double detRec(double matriz[][]) {
	deter=0.0;
	if(matriz.length==2)
    {
        deter=(matriz[0][0]*matriz[1][1])-(matriz[1][0]*matriz[0][1]);
        return deter;
    }
	double suma=0;
    for(int i=0; i<matriz.length; i++){
    double[][] nm=new double[matriz.length-1][matriz.length-1];
        for(int j=0; j<matriz.length; j++){
            if(j!=i){
                for(int k=1; k<matriz.length; k++){
                int indice=-1;
                if(j<i)
                indice=j;
                else if(j>i)
                indice=j-1;
                nm[indice][k-1]=matriz[j][k];
                }
            }
        }
        if(i%2==0)
        suma+=matriz[i][0] * detRec(nm);
        else
        suma-=matriz[i][0] * detRec(nm);
    }
    return suma;
}
	

}
